#ifndef EASTERNZOBRIST_H
#define EASTERNZOBRIST_H
#include "zobrist.h"
#include <QMutex>

namespace Chess {

/*! \brief Zobrist keys for Eastern chess variants */
class LIB_EXPORT EasternZobrist : public Zobrist
{
public:
    /*!
     * Creates a new uninitialized EasternZobrist object.
     *
     * \param keys An array of zobrist keys that can be used
     * instead of the random numbers generated by the Zobrist
     * class.
     */
    EasternZobrist(const quint64* keys = nullptr);

    // Inherited from Zobrist
    virtual void initialize(int squareCount,
                            int pieceTypeCount);
    virtual quint64 side() const;
    virtual quint64 piece(const Piece& piece, int square) const;

    /*!
     * Returns the zobrist value for player \a side's
     * castling rook at \a square.
     */
    virtual quint64 castling(int side, int square) const;

private:
    int m_castlingIndex;
    int m_pieceIndex;
    QMutex m_mutex;
};

} //namespace Chess
#endif // EASTERNZOBRIST_H
