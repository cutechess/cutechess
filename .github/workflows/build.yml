name: build cutechess
on: [push, pull_request]

jobs:
    build:
        name: "${{ matrix.os }} Qt ${{ matrix.qt_version }}"
        runs-on: ${{ matrix.os }}
        strategy:
          matrix:
            qt_version: [5.12.11]
            os: [windows-2019, ubuntu-latest, macos-latest]
        steps:
            - uses: actions/checkout@v2

            - name: install qt 5.x
              uses: jurplel/install-qt-action@v2
              if: startsWith(matrix.qt_version, '5.')
              with:
                version: ${{ matrix.qt_version }}
                modules: 'qtcharts'

            - name: install qt 6.x
              uses: jurplel/install-qt-action@v2
              if: startsWith(matrix.qt_version, '6.')
              with:
                version: ${{ matrix.qt_version }}
                modules: 'qt5compat qtcharts'

            - name: build cute chess
              if: matrix.os != 'windows-2019'
              run: |
                  qmake
                  make

            - name: run unit tests
              if: matrix.os != 'windows-2019'
              run: |
                  cd ${GITHUB_WORKSPACE}/projects/lib/tests/
                  qmake
                  make
                  make check

            - name: run unit tests (json)
              if: matrix.os != 'windows-2019'
              run: |
                  cd ${GITHUB_WORKSPACE}/projects/lib/components/json/tests/
                  qmake
                  make
                  make check

            - name: check manual pages
              if: matrix.os == 'ubuntu-latest'
              run: |
                  sudo apt install mandoc
                  cd ${GITHUB_WORKSPACE}/docs/
                  mandoc -T lint cutechess-cli.6
                  mandoc -T lint engines.json.5

            - name: build cute chess
              if: matrix.os == 'windows-2019'
              shell: cmd
              run: |
                  call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
                  qmake
                  nmake /NOLOGO

            - name: run unit tests
              if: matrix.os == 'windows-2019'
              shell: cmd
              run: |
                  call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
                  cd %GITHUB_WORKSPACE%\projects\lib\tests\
                  qmake
                  nmake /NOLOGO
                  nmake /NOLOGO check

            - name: run unit tests (json)
              shell: cmd
              if: matrix.os == 'windows-2019'
              run: |
                  call "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
                  cd %GITHUB_WORKSPACE%\projects\lib\components\json\tests\
                  qmake
                  nmake /NOLOGO
                  nmake /NOLOGO check
